## This workflow will install Python dependencies, run tests and lint with a single version of Python
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
#name: Python application
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up Python 3.10
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.10"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Deploy to Production
#        run: |
#          echo "Starting deployment..."
#          # Replace this echo with actual deployment commands, for example:
#          # ssh user@your-server "cd /path/to/project && git pull && systemctl restart your-service"
#name: cicd-pipeline
#
#on:
#  push:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#    name: ðŸ”§ Build & Test Python App
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.10"
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pytest
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#
#      - name: Lint with flake8
#        run: |
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#
#      - name: Test with pytest
#        run: |
#          pytest
#
#  deploy:
#    name: ðŸš€ Deploy to S3 Bucket
#    runs-on: ubuntu-latest
#    needs: build
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v4
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v2
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: eu-north-1
#
#      - name: Upload to S3
#        run: |
#          echo "Uploading files to S3..."
#          ls -al  # Check files
#          aws s3 sync . s3://cicd-new --delete --exclude ".git/*" --exclude ".github/*"

#
#name: Run Python Tests and Upload to S3
#
#on:
#  push:
#    branches: [main]
#
#jobs:
#  test-and-upload:
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Set up Python
#      uses: actions/setup-python@v2
#      with:
#        python-version: '3.10'
#
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install -r requirements.txt
#
#    - name: Run tests
#      run: |
#        pytest cicd-pipeline/tests/test_main.py
#
#    - name: Configure AWS CLI
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-north-1
#
#    - name: Upload file to S3
#      run: |
#        aws s3 cp cicd/cicd-pipeline/tests/test_main.py s3://cicd-new/cicd-pipeline/tests/test_main.py
name: Upload index.html to S3

on:
  push:
    branches: [main]

jobs:
  upload-to-s3:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Configure AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Upload index.html to S3
      run: |
        aws s3 cp tests/index.html s3://cicd-new/index.html --acl public-read
